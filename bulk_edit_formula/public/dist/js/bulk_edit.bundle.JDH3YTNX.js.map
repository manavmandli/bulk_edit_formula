{
  "version": 3,
  "sources": ["../../../../../apps/bulk_edit_formula/bulk_edit_formula/public/js/bulk_operations.js", "../../../../../apps/bulk_edit_formula/bulk_edit_formula/public/js/list_view.js"],
  "sourcesContent": ["export default class CustomBulkOperations {\n\tconstructor({ doctype }) {\n\t\tif (!doctype) frappe.throw(__(\"Doctype required\"));\n\t\tthis.doctype = doctype;\n\t}\n\n\tprint(docs) {\n\t\tconst print_settings = frappe.model.get_doc(\":Print Settings\", \"Print Settings\");\n\t\tconst allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n\t\tconst is_submittable = frappe.model.is_submittable(this.doctype);\n\t\tconst allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\t\tconst letterheads = this.get_letterhead_options();\n\t\tconst MAX_PRINT_LIMIT = 500;\n\t\tconst BACKGROUND_PRINT_THRESHOLD = 25;\n\n\t\tconst valid_docs = docs\n\t\t\t.filter((doc) => {\n\t\t\t\treturn (\n\t\t\t\t\t!is_submittable ||\n\t\t\t\t\tdoc.docstatus === 1 ||\n\t\t\t\t\t(allow_print_for_cancelled && doc.docstatus == 2) ||\n\t\t\t\t\t(allow_print_for_draft && doc.docstatus == 0) ||\n\t\t\t\t\tfrappe.user.has_role(\"Administrator\")\n\t\t\t\t);\n\t\t\t})\n\t\t\t.map((doc) => doc.name);\n\n\t\tconst invalid_docs = docs.filter((doc) => !valid_docs.includes(doc.name));\n\n\t\tif (invalid_docs.length > 0) {\n\t\t\tfrappe.msgprint(__(\"You selected Draft or Cancelled documents\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length === 0) {\n\t\t\tfrappe.msgprint(__(\"Select atleast 1 record for printing\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length > MAX_PRINT_LIMIT) {\n\t\t\tfrappe.msgprint(\n\t\t\t\t__(\"You can only print upto {0} documents at a time\", [MAX_PRINT_LIMIT])\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Print Documents\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Letter Head\"),\n\t\t\t\t\tfieldname: \"letter_sel\",\n\t\t\t\t\toptions: letterheads,\n\t\t\t\t\tdefault: letterheads[0],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Print Format\"),\n\t\t\t\t\tfieldname: \"print_sel\",\n\t\t\t\t\toptions: frappe.meta.get_print_formats(this.doctype),\n\t\t\t\t\tdefault: frappe.get_meta(this.doctype).default_print_format,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Page Size\"),\n\t\t\t\t\tfieldname: \"page_size\",\n\t\t\t\t\toptions: frappe.meta.get_print_sizes(),\n\t\t\t\t\tdefault: print_settings.pdf_page_size,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Float\",\n\t\t\t\t\tlabel: __(\"Page Height (in mm)\"),\n\t\t\t\t\tfieldname: \"page_height\",\n\t\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\t\tdefault: print_settings.pdf_page_height,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Float\",\n\t\t\t\t\tlabel: __(\"Page Width (in mm)\"),\n\t\t\t\t\tfieldname: \"page_width\",\n\t\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\t\tdefault: print_settings.pdf_page_width,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Check\",\n\t\t\t\t\tlabel: __(\"Background Print (required for >25 documents)\"),\n\t\t\t\t\tfieldname: \"background_print\",\n\t\t\t\t\tdefault: valid_docs.length > BACKGROUND_PRINT_THRESHOLD,\n\t\t\t\t\tread_only: valid_docs.length > BACKGROUND_PRINT_THRESHOLD,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tdialog.set_primary_action(__(\"Print\"), (args) => {\n\t\t\tif (!args) return;\n\t\t\tconst default_print_format = frappe.get_meta(this.doctype).default_print_format;\n\t\t\tconst with_letterhead = args.letter_sel == __(\"No Letterhead\") ? 0 : 1;\n\t\t\tconst print_format = args.print_sel ? args.print_sel : default_print_format;\n\t\t\tconst json_string = JSON.stringify(valid_docs);\n\t\t\tconst letterhead = args.letter_sel;\n\n\t\t\tlet pdf_options;\n\t\t\tif (args.page_size === \"Custom\") {\n\t\t\t\tif (args.page_height === 0 || args.page_width === 0) {\n\t\t\t\t\tfrappe.throw(__(\"Page height and width cannot be zero\"));\n\t\t\t\t}\n\t\t\t\tpdf_options = JSON.stringify({\n\t\t\t\t\t\"page-height\": args.page_height,\n\t\t\t\t\t\"page-width\": args.page_width,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpdf_options = JSON.stringify({ \"page-size\": args.page_size });\n\t\t\t}\n\n\t\t\tif (args.background_print) {\n\t\t\t\tfrappe\n\t\t\t\t\t.call(\"frappe.utils.print_format.download_multi_pdf_async\", {\n\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\tname: json_string,\n\t\t\t\t\t\tformat: print_format,\n\t\t\t\t\t\tno_letterhead: with_letterhead ? \"0\" : \"1\",\n\t\t\t\t\t\tletterhead: letterhead,\n\t\t\t\t\t\toptions: pdf_options,\n\t\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tlet task_id = response.message.task_id;\n\t\t\t\t\t\tfrappe.realtime.task_subscribe(task_id);\n\t\t\t\t\t\tfrappe.realtime.on(`task_complete:${task_id}`, (data) => {\n\t\t\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\t\t\ttitle: __(\"Bulk PDF Export\"),\n\t\t\t\t\t\t\t\tmessage: __(\"Your PDF is ready for download\"),\n\t\t\t\t\t\t\t\tprimary_action: {\n\t\t\t\t\t\t\t\t\tlabel: __(\"Download PDF\"),\n\t\t\t\t\t\t\t\t\tclient_action: \"window.open\",\n\t\t\t\t\t\t\t\t\targs: data.file_url,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tfrappe.realtime.task_unsubscribe(task_id);\n\t\t\t\t\t\t\tfrappe.realtime.off(`task_complete:${task_id}`);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst w = window.open(\n\t\t\t\t\t\"/api/method/frappe.utils.print_format.download_multi_pdf?\" +\n\t\t\t\t\t\t\"doctype=\" +\n\t\t\t\t\t\tencodeURIComponent(this.doctype) +\n\t\t\t\t\t\t\"&name=\" +\n\t\t\t\t\t\tencodeURIComponent(json_string) +\n\t\t\t\t\t\t\"&format=\" +\n\t\t\t\t\t\tencodeURIComponent(print_format) +\n\t\t\t\t\t\t\"&no_letterhead=\" +\n\t\t\t\t\t\t(with_letterhead ? \"0\" : \"1\") +\n\t\t\t\t\t\t\"&letterhead=\" +\n\t\t\t\t\t\tencodeURIComponent(letterhead) +\n\t\t\t\t\t\t\"&options=\" +\n\t\t\t\t\t\tencodeURIComponent(pdf_options)\n\t\t\t\t);\n\n\t\t\t\tif (!w) {\n\t\t\t\t\tfrappe.msgprint(__(\"Please enable pop-ups\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\tdialog.hide();\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_letterhead_options() {\n\t\tconst letterhead_options = [__(\"No Letterhead\")];\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Letter Head\",\n\t\t\t\tfields: [\"name\", \"is_default\"],\n\t\t\t\tfilters: { disabled: 0 },\n\t\t\t\tlimit_page_length: 0,\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tr.message.forEach((letterhead) => {\n\t\t\t\t\t\tif (letterhead.is_default) {\n\t\t\t\t\t\t\tletterhead_options.unshift(letterhead.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tletterhead_options.push(letterhead.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\treturn letterhead_options;\n\t}\n\n\tdelete(docnames, done = null) {\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.desk.reportview.delete_items\",\n\t\t\t\tfreeze: true,\n\t\t\t\tfreeze_message:\n\t\t\t\t\tdocnames.length <= 10\n\t\t\t\t\t\t? __(\"Deleting {0} records...\", [docnames.length])\n\t\t\t\t\t\t: null,\n\t\t\t\targs: {\n\t\t\t\t\titems: docnames,\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t__(\"Cannot delete {0}\", [failed.map((f) => f.bold()).join(\", \")])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(\"delete\");\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tassign(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tconst assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tobj: this,\n\t\t\t\tmethod: \"frappe.desk.form.assign_to.add_multiple\",\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocname: docnames,\n\t\t\t\tbulk_assign: true,\n\t\t\t\tre_assign: true,\n\t\t\t\tcallback: done,\n\t\t\t});\n\t\t\tassign_to.dialog.clear();\n\t\t\tassign_to.dialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__(\"Select records for assignment\"));\n\t\t}\n\t}\n\n\tclear_assignment(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe\n\t\t\t\t.call({\n\t\t\t\t\tmethod: \"frappe.desk.form.assign_to.remove_multiple\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\tnames: docnames,\n\t\t\t\t\t\tignore_permissions: true,\n\t\t\t\t\t},\n\t\t\t\t\tfreeze: true,\n\t\t\t\t\tfreeze_message: \"Removing assignments...\",\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t} else {\n\t\t\tfrappe.msgprint(__(\"Select records for removing assignment\"));\n\t\t}\n\t}\n\n\tapply_assignment_rule(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe\n\t\t\t\t.call(\"frappe.automation.doctype.assignment_rule.assignment_rule.bulk_apply\", {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tdocnames: docnames,\n\t\t\t\t})\n\t\t\t\t.then(() => done());\n\t\t}\n\t}\n\n\tsubmit_or_cancel(docnames, action = \"submit\", done = null) {\n\t\taction = action.toLowerCase();\n\t\tconst task_id = Math.random().toString(36).slice(-5);\n\t\tfrappe.realtime.task_subscribe(task_id);\n\t\treturn frappe\n\t\t\t.xcall(\"frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs\", {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\taction: action,\n\t\t\t\tdocnames: docnames,\n\t\t\t\ttask_id: task_id,\n\t\t\t})\n\t\t\t.then((failed_docnames) => {\n\t\t\t\tif (failed_docnames?.length) {\n\t\t\t\t\tconst comma_separated_records = frappe.utils.comma_and(failed_docnames);\n\t\t\t\t\tswitch (action) {\n\t\t\t\t\t\tcase \"submit\":\n\t\t\t\t\t\t\tfrappe.throw(__(\"Cannot submit {0}.\", [comma_separated_records]));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"cancel\":\n\t\t\t\t\t\t\tfrappe.throw(__(\"Cannot cancel {0}.\", [comma_separated_records]));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tfrappe.throw(__(\"Cannot {0} {1}.\", [action, comma_separated_records]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (failed_docnames?.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(action);\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tfrappe.realtime.task_unsubscribe(task_id);\n\t\t\t});\n\t}\n\n\tedit(docnames, field_mappings, done) {\n\t\tconsole.log(\"Bulk Edit\", docnames, field_mappings);\n\t\tlet field_options = Object.keys(field_mappings).sort(function (a, b) {\n\t\t\treturn __(cstr(field_mappings[a].label)).localeCompare(\n\t\t\t\tcstr(__(field_mappings[b].label))\n\t\t\t);\n\t\t});\n\t\tconst status_regex = /status/i;\n\t\tconst numeric_fieldtypes = [\"Int\", \"Float\", \"Currency\", \"Percent\"];\n\n\t\tconst default_field = field_options.find((value) => status_regex.test(value));\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Bulk Edit\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: field_options,\n\t\t\t\t\tdefault: default_field,\n\t\t\t\t\tlabel: __(\"Field\"),\n\t\t\t\t\tfieldname: \"field\",\n\t\t\t\t\treqd: 1,\n\t\t\t\t\tonchange: () => {\n\t\t\t\t\t\tset_value_field(dialog);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Data\",\n\t\t\t\t\tlabel: __(\"Value\"),\n\t\t\t\t\tfieldname: \"value\",\n\t\t\t\t\tonchange() {\n\t\t\t\t\t\tshow_help_text();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action: ({ value }) => {\n\t\t\t\tconst fieldname = field_mappings[dialog.get_value(\"field\")].fieldname;\n\t\t\t\tdialog.disable_primary_action();\n\t\t\t\tfrappe\n\t\t\t\t\t.call({\n\t\t\t\t\t\tmethod: \"bulk_edit_formula.overrides.bulk_update.custom_submit_cancel_or_update_docs\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdoctype: cur_list.doctype,\n\t\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\t\tdocnames: docnames,\n\t\t\t\t\t\t\taction: \"update\",\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t[fieldname]: value || null,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\tlet failed = r.message || [];\n\n\t\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\t\tdialog.enable_primary_action();\n\t\t\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t\t\t__(\"Cannot update {0}\", [\n\t\t\t\t\t\t\t\t\tfailed.map((f) => (f.bold ? f.bold() : f)).join(\", \"),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\tfrappe.show_alert(__(\"Updated successfully\"));\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __(\"Update {0} records\", [docnames.length]),\n\t\t});\n\n\t\tif (default_field) set_value_field(dialog); // to set `Value` df based on default `Field`\n\t\tshow_help_text();\n\n\t\tfunction set_value_field(dialogObj) {\n\t\t\tconst new_df = Object.assign({}, field_mappings[dialogObj.get_value(\"field\")]);\n\t\t\t/* if the field label has status in it and\n\t\t\tif it has select fieldtype with no default value then\n\t\t\tset a default value from the available option. */\n\t\t\tif (\n\t\t\t\tnew_df.label.match(status_regex) &&\n\t\t\t\tnew_df.fieldtype === \"Select\" &&\n\t\t\t\t!new_df.default\n\t\t\t) {\n\t\t\t\tlet options = [];\n\t\t\t\tif (typeof new_df.options === \"string\") {\n\t\t\t\t\toptions = new_df.options.split(\"\\n\");\n\t\t\t\t}\n\t\t\t\t//set second option as default if first option is an empty string\n\t\t\t\tnew_df.default = options[0] || options[1];\n\t\t\t}\n\t\t\tnew_df.label = __(\"Value\");\n\t\t\tnew_df.onchange = show_help_text;\n\n\t\t\tif (numeric_fieldtypes.includes(new_df.fieldtype)) {\n\t\t\t\tnew_df.fieldtype = \"Data\";\n\t\t\t}\n\n\t\t\tdelete new_df.depends_on;\n\t\t\tdialogObj.replace_field(\"value\", new_df);\n\t\t\tshow_help_text();\n\t\t}\n\n\t\tfunction show_help_text() {\n\t\t\tlet value = dialog.get_value(\"value\");\n\t\t\tlet fieldname = dialog.get_value(\"field\");\n\t\t\tlet fieldtype = field_mappings[fieldname]?.fieldtype;\n\n\t\t\tif (value == null || value === \"\") {\n\t\t\t\tif (numeric_fieldtypes.includes(fieldtype)) {\n\t\t\t\t\tdialog.set_df_property(\n\t\t\t\t\t\t\"value\",\n\t\t\t\t\t\t\"description\",\n\t\t\t\t\t\t__(\"Enter a number or formula (e.g. =*2, +10, /3)\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdialog.set_df_property(\n\t\t\t\t\t\t\"value\",\n\t\t\t\t\t\t\"description\",\n\t\t\t\t\t\t__(\"You have not entered a value. The field will be set to empty.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdialog.set_df_property(\"value\", \"description\", \"\");\n\t\t\t}\n\t\t}\n\n\t\tdialog.refresh();\n\t\tdialog.show();\n\t}\n\n\tadd_tags(docnames, done) {\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add Tags\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"MultiSelectPills\",\n\t\t\t\t\tfieldname: \"tags\",\n\t\t\t\t\tlabel: __(\"Tags\"),\n\t\t\t\t\treqd: true,\n\t\t\t\t\tget_data: function (txt) {\n\t\t\t\t\t\treturn frappe.db.get_link_options(\"Tag\", txt);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet args = dialog.get_values();\n\t\t\t\tif (args && args.tags) {\n\t\t\t\t\tdialog.set_message(\"Adding Tags...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tags\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\ttags: args.tags,\n\t\t\t\t\t\t\tdt: this.doctype,\n\t\t\t\t\t\t\tdocs: docnames,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n\n\texport(doctype, docnames) {\n\t\tfrappe.require(\"data_import_tools.bundle.js\", () => {\n\t\t\tconst data_exporter = new frappe.data_import.DataExporter(\n\t\t\t\tdoctype,\n\t\t\t\t\"Insert New Records\"\n\t\t\t);\n\t\t\tdata_exporter.dialog.set_value(\"export_records\", \"by_filter\");\n\t\t\tdata_exporter.filter_group.add_filters_to_filter_group([\n\t\t\t\t[doctype, \"name\", \"in\", docnames, false],\n\t\t\t]);\n\t\t});\n\t}\n}", "import CustomBulkOperations from \"./bulk_operations\";\n\nfrappe.views.ListView = class ListView extends frappe.views.ListView {\n    get_actions_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst actions_menu_items = [];\n\t\tconst bulk_operations = new CustomBulkOperations({ doctype: this.doctype });\n\n\t\tconst is_field_editable = (field_doc) => {\n\t\t\treturn (\n\t\t\t\tfield_doc.fieldname &&\n\t\t\t\tfrappe.model.is_value_type(field_doc) &&\n\t\t\t\tfield_doc.fieldtype !== \"Read Only\" &&\n\t\t\t\t!field_doc.hidden &&\n\t\t\t\t!field_doc.read_only &&\n\t\t\t\t!field_doc.is_virtual\n\t\t\t);\n\t\t};\n\n\t\tconst has_editable_fields = (doctype) => {\n\t\t\treturn frappe.meta\n\t\t\t\t.get_docfields(doctype)\n\t\t\t\t.some((field_doc) => is_field_editable(field_doc));\n\t\t};\n\n\t\tconst has_submit_permission = (doctype) => {\n\t\t\treturn frappe.perm.has_perm(doctype, 0, \"submit\");\n\t\t};\n\n\t\tconst is_bulk_edit_allowed = (doctype) => {\n\t\t\t// Check settings if there is a workflow defined, otherwise directly allow\n\t\t\tif (frappe.model.has_workflow(doctype)) {\n\t\t\t\treturn !!this.list_view_settings?.allow_edit;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t// utility\n\t\tconst bulk_assignment = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Assign To\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.assign(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_clear = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Clear Assignment\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t__(\"Are you sure you want to clear the assignments?\"),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\tbulk_operations.clear_assignment(this.get_checked_items(true), () => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_rule = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Apply Assignment Rule\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.apply_assignment_rule(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_add_tags = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Add Tags\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.add_tags(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_printing = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Print\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => bulk_operations.print(this.get_checked_items()),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Delete\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map((docname) =>\n\t\t\t\t\t\tdocname.toString()\n\t\t\t\t\t);\n\t\t\t\t\tlet message = __(\n\t\t\t\t\t\t\"Delete {0} item permanently?\",\n\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t);\n\t\t\t\t\tif (docnames.length > 1) {\n\t\t\t\t\t\tmessage = __(\n\t\t\t\t\t\t\t\"Delete {0} items permanently?\",\n\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tfrappe.confirm(message, () => {\n\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\tbulk_operations.delete(docnames, () => {\n\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_cancel = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Cancel\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\"Cancel {0} documents?\",\n\t\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(docnames, \"cancel\", () => {\n\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_submit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Submit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\"Submit {0} documents?\",\n\t\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(docnames, \"submit\", () => {\n\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_edit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Edit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet field_mappings = {};\n\n\t\t\t\t\tfrappe.meta.get_docfields(doctype).forEach((field_doc) => {\n\t\t\t\t\t\tif (is_field_editable(field_doc)) {\n\t\t\t\t\t\t\tfield_mappings[field_doc.label] = Object.assign({}, field_doc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.edit(this.get_checked_items(true), field_mappings, () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_export = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Export\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\n\t\t\t\t\tbulk_operations.export(doctype, docnames);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\t// bulk edit\n\t\tif (has_editable_fields(doctype) && is_bulk_edit_allowed(doctype)) {\n\t\t\tactions_menu_items.push(bulk_edit());\n\t\t}\n\n\t\tactions_menu_items.push(bulk_export());\n\n\t\t// bulk assignment\n\t\tactions_menu_items.push(bulk_assignment());\n\n\t\tactions_menu_items.push(bulk_assignment_clear());\n\n\t\tactions_menu_items.push(bulk_assignment_rule());\n\n\t\tactions_menu_items.push(bulk_add_tags());\n\n\t\t// bulk printing\n\t\tif (frappe.model.can_print(doctype)) {\n\t\t\tactions_menu_items.push(bulk_printing());\n\t\t}\n\n\t\t// bulk submit\n\t\tif (\n\t\t\tfrappe.model.is_submittable(doctype) &&\n\t\t\thas_submit_permission(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_submit());\n\t\t}\n\n\t\t// bulk cancel\n\t\tif (frappe.model.can_cancel(doctype) && !frappe.model.has_workflow(doctype)) {\n\t\t\tactions_menu_items.push(bulk_cancel());\n\t\t}\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype) && is_bulk_edit_allowed(doctype)) {\n\t\t\tactions_menu_items.push(bulk_delete());\n\t\t}\n\n\t\treturn actions_menu_items;\n\t}\n}"],
  "mappings": "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",
  "names": ["doctype"]
}
